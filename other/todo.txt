- Cleanup code and add it to github

- Extend experiments with Tseitin to (dis)-prove whether polynomial proofs are found

- Try with other type of Tseitin formulas (cnfgen)

- Understand why solver is good on Tseitin

- Try benchmarks Ian sent (there seems to be some problem):
  * Multiplication
  * Crypto

- Try heuristics that distinguish extended/original variables

- Experiment with policies that:
  * Decide which type of DIPs are considered (closest to conflict, middle, ...)
  * Whether it pays off to add that particular DIP

- Check whether for PHP we generate poly proofs

- Sparse PHP (d=4)? Other d's as well.

- randomkxor with longer clause width

- Ask Armin whether kissat = resolution


=========================

- Try to only learn one (maybe it is slower because we are learning too many lemmas?)

- Try to have a look at the heuristic. Maybe we are doing something wrong. What if we increase var scores only during the traversal that finds the 1UIP?

- After X decisions, is %decs on ext-vars is < 10% move to standard 1UIP learning



======================================

- Experiment with where to BJ (DIP or 1UIP). Currently we BJ to DIP (my assumption)
- Maximize times when DIP does not involve side literals
- Use % decision on extended to increase the threshold (5,20) or even disable the technique
